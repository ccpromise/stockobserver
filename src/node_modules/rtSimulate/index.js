
const config = require('config');
const utility = require('utility');
const time = utility.time;
const validate = utility.validate;
const async = utility.async;
const tradePlans = require('tradeplans');
const getHistoryStockData = require('getHistoryStockData');
const simulate = require('simulate');
const process = require('process');

function run(args) {
    return getHistoryStockData(tradePlans.list).then(() => {
        var openTime = time.today(config.stockOpenTime);
        var closeTime = time.today(config.stockCloseTime);
        return new Promise((resolve, reject) => {
            var loop = function () {
                setTimeout(() => {
                    if(time.isAfter(time.now(), openTime)) {
                        var i = 1;
                        async.while(() => {
                            return time.isAfter(closeTime, time.now());
                        }, () => {
                            console.log(time.now());
                            console.log('start to run ', i++, 'th simulation');
                            return simulate(tradePlans.list);
                        }).then(() => {
                            resolve();
                        }, (err) => {
                            reject(err);
                        })
                    }
                    else loop();
                }, 60000);
            }
            loop();
        });
    });
}

var lastRtSimulateDate = time.yesterday();
var loop = function () {
    setTimeout(() => {
        var today = time.today();
        var produceTime = time.today(config.produceTime.rtSimulate);
        if (time.isAfter(time.now(), produceTime) && time.isAfter(today, lastRtSimulateDate)) {
            console.log('start real time simulation: ', time.now());
            run(arg).then(() => {
                console.log('finish real time simulation: ', time.format(time.now()))
                lastRtSimulateDate = today;
                loop();
            }, (err) => {
                console.log('find error when running rt simulation: ', err);
                process.exit();
            });
        }
        else loop();
    }, config.produceInterval.rtSimulate);
}
loop();
