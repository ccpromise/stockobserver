
const DataPvd = require('../basicDataPvd').DataPvd;
const time = require('utility').time;

function StockDataPvd(stock, id) {
    DataPvd.call(this, id); //*

    this._stock = stock.data;
    this.minTs = stock.minTs;
    this.maxTs = stock.maxTs;
}

StockDataPvd.prototype = Object.create(DataPvd.prototype);

StockDataPvd.prototype.hasDef = function(ts) {
    return ts in this._stock && ts >= this.minTs && ts <= this.maxTs;
}

StockDataPvd.prototype.get = function (ts) {
    if(!this.hasDef(ts)) throw new Error('invalid ts');
    return this._stock[ts];
}

StockDataPvd.prototype.forwardDateTs = function(ts, n) {
    while(!(ts in this._stock) && ts <= this.maxTs) ts ++;
    while(n > 0 && ts in this._stock) {
        ts ++;
        while(!(ts in this._stock) && ts <= this.maxTs) ts ++;
        n --;
    }
    return ts in this._stock ? ts : -1;
}

StockDataPvd.prototype.backwardDateTs = function(ts, n) {
    while(!(ts in this._stock) && ts >= this.minTs) ts --;
    while(n > 0 && ts in this._stock) {
        ts --;
        while(!(ts in this._stock) && ts >= this.minTs) ts --;
        n --;
    }
    return ts in this._stock ? ts : -1;
}

module.exports = StockDataPvd;
